apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: igc-health-check
spec:
  inputs:
    resources:
      - name: source
        type: git
      - name: image
        type: image
    params:
      - name: js-image
        type: string
        default: docker.io/node:12-stretch
      - name: tools-image
        type: string
        default: docker.io/csantanapr/helm-kubectl
  steps:
    - name: health-check
      image: $(inputs.params.tools-image)
      workingdir: $(inputs.resources.source.path)
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e

          ENVIRONMENT_NAME="${NAMESPACE}"

          IMAGE_URL=$(inputs.resources.image.url)

          REGISTRY_URL=$(echo $IMAGE_URL | awk -F / '{print $1}')
          REGISTRY_NAMESPACE=$(echo $IMAGE_URL | awk -F / '{print $2}')
          INGRESS_NAME=$(echo $IMAGE_URL | awk -F / '{print $3}' | awk -F : '{print $1}')

          set +e
          HOST=$(kubectl get ingress/${INGRESS_NAME} --namespace ${ENVIRONMENT_NAME} --output="jsonpath='{ .spec.rules[0].host }'")
          set -e
          if [[ -z "${HOST}" ]]; then
            HOST=$(kubectl get route/${INGRESS_NAME} --namespace ${ENVIRONMENT_NAME} --output="jsonpath='{ .spec.host }'")
          fi
          PORT='80'

          # sleep for 10 seconds to allow enough time for the server to start
          sleep 30

          if [[ $(curl -sL -w "%{http_code}\\n" "http://${HOST}:${PORT}/health" -o /dev/null --connect-timeout 3 --max-time 5 --retry 3 --retry-max-time 30) == "200" ]]; then
              echo "Successfully reached health endpoint: http://${HOST}:${PORT}/health"
              echo "====================================================================="
          else
              echo "Could not reach health endpoint: http://${HOST}:${PORT}/health"
              exit 1
          fi
